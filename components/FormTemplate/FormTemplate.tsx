import Head from 'next/head';
import React, { useContext, useEffect } from 'react';
import { BuilderContext } from '../../context/builder.context';
import { EditFields } from '../EditFields';
import classes from './form-template.module.scss';

export interface FormTemplateProps {
  id: string | undefined;
}

export const FormTemplate: React.VFC<FormTemplateProps> = ({ id }) => {
  const { form, editId, addField, editTitle } = useContext(BuilderContext);

  useEffect(() => {
    if (id) {
      editId(id.toString());
    }
  }, [editId, id]);

  const handleSave = async () => {
    const template = JSON.stringify(form, null, 2);
    const res = await fetch('/api/templates/' + id, {
      method: 'POST',
      body: template,
      headers: {
        'Content-Type': 'application/json',
      },
    });
    if (res.ok) {
      alert('form ok');
    } else {
      alert('form not ok :(');
    }
  };

  return (
    <div className={classes.container}>
      <Head>
        <title>{form.title}</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <header className={classes.header}>
        <input
          type='text'
          placeholder='Form Name'
          value={form.title}
          onChange={(e) => editTitle(e.target.value)}
        />
      </header>
      <main className={classes.main}>
        <section>
          <EditFields />
        </section>
      </main>
      <footer className={classes.actions}>
        <button onClick={addField}>Add Field</button>
        <button>Reset Form</button>
        <button onClick={handleSave}>Save Form</button>
      </footer>
    </div>
  );
};
